---
# util_server-role/tasks/install-pihole.yml
# This will install pihole. The earlier tasks will also be taken care of
# by the pi-hole installation script. Because we are going for a non-interactive
# install, this presumes a config-directory, because the non-interactive pi-hole
# script expects setupVars.conf. This is why we need to perform
# some tasks doubly and through this script.
- name: Ensure prerequisites are present for pihole installation
  ansible.builtin.apt:
    name:
      - curl
    state: present

- name: Ensure dummy interface is present (if needed)
  ansible.builtin.include_tasks: install-dummy-interface.yml
  when: install_dummy

- name: Create pihole group
  ansible.builtin.group:
    name: pihole
    state: present

# nobody/nothing will ever login as pihole, so no home-folder and no default shell
- name: Create pihole user
  ansible.builtin.user:
    name: pihole
    group: pihole
    create_home: false
    shell: /usr/sbin/nologin
    state: present

# This is the directory where the install script will expect setupVars.conf
- name: Create the pihole config directory if it does not exist yet
  ansible.builtin.file:
    path: /etc/pihole
    state: directory
    owner: pihole
    group: pihole
    mode: "0755"

# setupVars is replaced by pihole.toml starting from version 6.0
- name: Prepare the settings file in order to make unattended install
  ansible.builtin.template:
    src: etc/pihole/pihole.toml.j2
    dest: /etc/pihole/pihole.toml
    mode: "0644"

- name: Install pi-hole by piping to bash (may be insecure) # noqa: command-instead-of-module # noqa: risky-shell-pipe
  ansible.builtin.shell:
    cmd: "curl -sSL https://install.pi-hole.net | bash /dev/stdin --unattended"
  when: install_pihole
  changed_when: true

- name: Check status of pihole-FTL
  ansible.builtin.systemd:
    name: pihole-FTL
  register: pihole_ftl_status

- name: Tell user the status of pihole-FTL
  ansible.builtin.debug:
    msg: "FTL is {{ pihole_ftl_status.status.ActiveState }}. Trying corrective action."
  when: pihole_ftl_status.status.ActiveState != "active"

- name: Take corrective action if FTL not running
  ansible.builtin.include_tasks: correct-systemd-piholeFTL.yml
  when: pihole_ftl_status.status.ActiveState != "active"
